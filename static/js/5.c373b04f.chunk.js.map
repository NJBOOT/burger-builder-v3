{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","Object","keys","map","ing","i","key","className","classes","Ingredient","formatPrice","format","price","Button","buttonType","disabled","handleClick","handleDelete","Orders","this","fetchOrderData","token","userId","orders","Spinner","loading","order","id","onDeleteOrder","length","style","textAlign","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,WAAa,4B,sJCkC7CC,EA9BD,SAAAC,GACZ,IAAIC,EAAc,KAQlB,OAPID,EAAMC,cACRA,EAAcC,OAAOC,KAAKH,EAAMC,aAAaG,KAAI,SAACC,EAAKC,GAAN,OAC/C,0BAAMC,IAAKD,GACRD,EADH,gBACcL,EAAMC,YAAYI,GADhC,WAMF,yBAAKG,UAAWC,IAAQV,OACtB,6BACE,uBAAGS,UAAWC,IAAQC,YAAtB,gBAAgDT,GAChD,qCACS,gCAASU,IAAYC,OAAOZ,EAAMa,UAG7C,6BACE,kBAACC,EAAA,EAAD,CACEC,WAAW,SACXC,UAAU,EACVC,YAAajB,EAAMkB,cAHrB,a,gBCfFC,E,kLAEFC,KAAKpB,MAAMqB,eAAeD,KAAKpB,MAAMsB,MAAOF,KAAKpB,MAAMuB,U,+BAG/C,IAAD,OACHC,EAAS,kBAACC,EAAA,EAAD,MAcb,OAbKL,KAAKpB,MAAM0B,UACdF,EAASJ,KAAKpB,MAAMwB,OAAOpB,KAAI,SAAAuB,GAAK,OAClC,kBAAC,EAAD,CACEpB,IAAKoB,EAAMC,GACXA,GAAID,EAAMC,GACVV,aAAc,kBACZ,EAAKlB,MAAM6B,cAAcF,EAAMC,GAAI,EAAK5B,MAAMsB,QAEhDrB,YAAa0B,EAAM1B,YACnBY,MAAOc,EAAMd,YAIc,IAA7BO,KAAKpB,MAAMwB,OAAOM,OACb,wBAAIC,MAAO,CAAEC,UAAW,WAAxB,mBAEF,6BAAMR,O,GAvBIS,aA6CNC,uBAlBS,SAAAC,GACtB,MAAO,CACLX,OAAQW,EAAMR,MAAMH,OACpBE,QAASS,EAAMR,MAAMD,QACrBJ,MAAOa,EAAMC,KAAKd,MAClBC,OAAQY,EAAMC,KAAKb,WAII,SAAAc,GACzB,MAAO,CACLhB,eAAgB,SAACC,EAAOC,GAAR,OACdc,EAASC,IAAoBhB,EAAOC,KACtCM,cAAe,SAACD,EAAIN,GAAL,OACbe,EAASC,IAA0BV,EAAIN,QAI9BY,CAGbK,YAAiBpB,EAAQqB","file":"static/js/5.c373b04f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\",\"Ingredient\":\"Order_Ingredient__3TktI\"};","import React from \"react\";\nimport classes from \"./Order.module.css\";\nimport formatPrice from \"../../helpers/price\";\nimport Button from \"../UI/Button/Button\";\n\nconst Order = props => {\n  let ingredients = null;\n  if (props.ingredients) {\n    ingredients = Object.keys(props.ingredients).map((ing, i) => (\n      <span key={i}>\n        {ing}: {`(${props.ingredients[ing]}) `}\n      </span>\n    ));\n  }\n  return (\n    <div className={classes.Order}>\n      <div>\n        <p className={classes.Ingredient}>Ingredients: {ingredients}</p>\n        <p>\n          Price: <strong>{formatPrice.format(props.price)}</strong>\n        </p>\n      </div>\n      <div>\n        <Button\n          buttonType=\"Danger\"\n          disabled={false}\n          handleClick={props.handleDelete}\n        >\n          DELETE\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Order;\n\n// const ingredients = [];\n\n// for (let key in props.ingredients) {\n//   ingredients.push({ name: key, amount: props.ingredients[key] });\n// }\n// const ingredientOutput = ingredients.map((ing, i) => (\n//   <span\n//     key={i}\n//     style={{\n//       textTransform: \"capitalize\",\n//       margin: \"0 8px\",\n//       border: \"1px solid #ccc\",\n//       padding: \"5px\",\n//     }}\n//   >\n//     {ing.name} ({ing.amount})\n//   </span>\n// ));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../axiosOrders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Order from \"../../components/Order/Order\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as actions from \"../../store/actions\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.fetchOrderData(this.props.token, this.props.userId);\n  }\n\n  render() {\n    let orders = <Spinner />;\n    if (!this.props.loading) {\n      orders = this.props.orders.map(order => (\n        <Order\n          key={order.id}\n          id={order.id}\n          handleDelete={() =>\n            this.props.onDeleteOrder(order.id, this.props.token)\n          }\n          ingredients={order.ingredients}\n          price={order.price}\n        />\n      ));\n    }\n    if (this.props.orders.length === 0) {\n      return <h1 style={{ textAlign: \"center\" }}>No Orders Found</h1>;\n    }\n    return <div>{orders}</div>;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchOrderData: (token, userId) =>\n      dispatch(actions.fetchOrders(token, userId)),\n    onDeleteOrder: (id, token) =>\n      dispatch(actions.handleDeleteOrder(id, token)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n\n// handleDelete = id => {\n//   axios\n//     .delete(\"/orders/\" + id + \".json\")\n//     .then(res => this.props.fetchOrderData())\n//     .catch(err => console.log(err));\n// };\n\n// componentDidUpdate(pp) {\n//   if (this.props.orders !== pp.orders) {\n//     console.log(this.props.orders, pp.orders);\n//   }\n// }\n"],"sourceRoot":""}